name: Deploy UnifyOps Core to EC2 with Docker

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
      - '.env.*'
      - 'scripts/**'
      - 'Makefile'
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - 'app/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'requirements.txt'
      - '.env.*'
      - 'scripts/**'
      - 'Makefile'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  test:
    name: Test API
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: make install
      
      - name: Run tests
        run: make ci-test

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Determine environment
        id: env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            echo "env=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          else
            echo "ENV=dev" >> $GITHUB_ENV
            echo "env=dev" >> $GITHUB_OUTPUT
          fi
      
      - name: Build Docker image
        run: make ci-docker-build
      
      - name: Tag and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          BUILD_TIMESTAMP: $(date +%Y%m%d%H%M%S)
        run: |
          # Tag and push to ECR
          docker tag unifyops-api:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Deploy to EC2
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Set required environment variables
          export AWS_REGION
          export ECR_REGISTRY
          export ECR_REPOSITORY
          export EC2_INSTANCE_ID
          export IMAGE_TAG
          
          # Deploy using the script (with environment flag)
          chmod +x ./scripts/build_and_deploy.sh
          ./scripts/build_and_deploy.sh --env ${{ env.ENV }} --no-build --deploy-only
      
      - name: Deployment summary
        run: |
          echo "===================================="
          echo "Deployment Summary"
          echo "===================================="
          echo "Environment: ${{ env.ENV }}"
          echo "Image: ${{ steps.build-image.outputs.image }}"
          echo "Deployment Status: Success"
          echo "======================================"