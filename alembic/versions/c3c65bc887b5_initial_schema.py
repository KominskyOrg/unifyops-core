"""Initial schema

Revision ID: c3c65bc887b5
Revises: 
Create Date: 2025-04-09 03:46:13.933688

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c3c65bc887b5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip dropping tables since they already exist
    # Instead, just make the necessary modifications to the schema
    
    # Add new columns to environments
    op.add_column('environments', sa.Column('description', sa.Text(), nullable=True), schema='app_schema')
    op.add_column('environments', sa.Column('organization_id', sa.String(length=36), nullable=True), schema='app_schema')
    op.add_column('environments', sa.Column('team_id', sa.String(length=36), nullable=True), schema='app_schema')
    op.add_column('environments', sa.Column('created_by', sa.String(length=255), nullable=True), schema='app_schema')
    op.add_column('environments', sa.Column('terraform_dir', sa.String(length=255), nullable=True), schema='app_schema')
    op.add_column('environments', sa.Column('tags', sa.JSON(), nullable=True), schema='app_schema')
    op.add_column('environments', sa.Column('last_deployed_at', sa.DateTime(), nullable=True), schema='app_schema')
    op.add_column('environments', sa.Column('estimated_cost', sa.Float(), nullable=True), schema='app_schema')
    
    # Alter existing columns
    op.alter_column('environments', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               schema='app_schema')
    
    # Create foreign keys but handle the case if they already exist
    try:
        op.create_foreign_key('fk_environments_teams', 'environments', 'teams', ['team_id'], ['id'], source_schema='app_schema', referent_schema='app_schema')
    except:
        pass
    
    try:
        op.create_foreign_key('fk_environments_organizations', 'environments', 'organizations', ['organization_id'], ['id'], source_schema='app_schema', referent_schema='app_schema')
    except:
        pass
    
    # Don't drop columns yet, as they may be in use
    # Instead, update resources
    try:
        op.add_column('resources', sa.Column('provider', sa.String(length=50), nullable=True), schema='app_schema')
        op.add_column('resources', sa.Column('state', sa.String(length=50), nullable=True), schema='app_schema')
        op.add_column('resources', sa.Column('outputs', sa.JSON(), nullable=True), schema='app_schema')
        op.add_column('resources', sa.Column('position_x', sa.Integer(), nullable=True), schema='app_schema')
        op.add_column('resources', sa.Column('position_y', sa.Integer(), nullable=True), schema='app_schema')
    except:
        pass
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove any columns we added
    op.drop_column('resources', 'position_y', schema='app_schema')
    op.drop_column('resources', 'position_x', schema='app_schema')
    op.drop_column('resources', 'outputs', schema='app_schema')
    op.drop_column('resources', 'state', schema='app_schema')
    op.drop_column('resources', 'provider', schema='app_schema')
    
    op.drop_column('environments', 'estimated_cost', schema='app_schema')
    op.drop_column('environments', 'last_deployed_at', schema='app_schema')
    op.drop_column('environments', 'tags', schema='app_schema')
    op.drop_column('environments', 'terraform_dir', schema='app_schema')
    op.drop_column('environments', 'created_by', schema='app_schema')
    op.drop_column('environments', 'team_id', schema='app_schema')
    op.drop_column('environments', 'organization_id', schema='app_schema')
    op.drop_column('environments', 'description', schema='app_schema')
    # ### end Alembic commands ### 