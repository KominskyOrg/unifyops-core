#!/usr/bin/env python3
"""
Script to fix the Alembic migration file to handle dependencies correctly
"""

import os

# Migration content
MIGRATION = '''"""create_complete_schema

Revision ID: 52d9746271ab
Revises: c3c65bc887b5
Create Date: 2025-04-09 04:11:40.994710

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '52d9746271ab'
down_revision = 'c3c65bc887b5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # We need to modify the upgrade process to prevent dependency issues
    # First drop any foreign key constraints in the existing tables
    try:
        with op.batch_alter_table('connections', schema='app_schema') as batch_op:
            batch_op.drop_constraint('connections_source_id_fkey', type_='foreignkey')
            batch_op.drop_constraint('connections_target_id_fkey', type_='foreignkey')
    except:
        pass # Table might not exist
    
    # Now drop all existing tables that are going to be replaced
    try:
        op.drop_table('connections', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('resources', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('state_management', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('compliance_rules', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('environment_versions', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('deployments', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('environments', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('teams', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('cloud_credentials', schema='app_schema')
    except:
        pass # Table might not exist
    try:
        op.drop_table('organizations', schema='app_schema')
    except:
        pass # Table might not exist
    
    # Now create all tables in the correct order
    op.create_table('organizations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('teams',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['app_schema.organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('cloud_credentials',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('credentials', sa.JSON(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['app_schema.organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('environments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('organization_id', sa.String(length=36), nullable=False),
    sa.Column('team_id', sa.String(length=36), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=False),
    sa.Column('terraform_dir', sa.String(length=255), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_deployed_at', sa.DateTime(), nullable=True),
    sa.Column('estimated_cost', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['app_schema.organizations.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['app_schema.teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('compliance_rules',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rule_type', sa.String(length=50), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('resource_type', sa.String(length=100), nullable=True),
    sa.Column('rule_definition', sa.JSON(), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('deployments',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('environment_id', sa.String(length=36), nullable=False),
    sa.Column('execution_id', sa.String(length=36), nullable=False),
    sa.Column('operation', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('initiated_by', sa.String(length=255), nullable=False),
    sa.Column('output', sa.Text(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['environment_id'], ['app_schema.environments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('environment_versions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('environment_id', sa.String(length=36), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('snapshot', sa.JSON(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['environment_id'], ['app_schema.environments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('resources',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('module_path', sa.String(length=255), nullable=False),
    sa.Column('resource_type', sa.String(length=100), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('environment_id', sa.String(length=36), nullable=False),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('outputs', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('correlation_id', sa.String(length=100), nullable=True),
    sa.Column('auto_apply', sa.String(length=5), nullable=True),
    sa.Column('position_x', sa.Integer(), nullable=True),
    sa.Column('position_y', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('init_execution_id', sa.String(length=36), nullable=True),
    sa.Column('plan_execution_id', sa.String(length=36), nullable=True),
    sa.Column('apply_execution_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['environment_id'], ['app_schema.environments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_index('ix_resources_environment_id', 'resources', ['environment_id'], unique=False, schema='app_schema')
    op.create_index('ix_resources_name', 'resources', ['name'], unique=False, schema='app_schema')
    op.create_index('ix_resources_resource_type', 'resources', ['resource_type'], unique=False, schema='app_schema')
    
    op.create_table('state_management',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('environment_id', sa.String(length=36), nullable=False),
    sa.Column('backend_type', sa.String(length=50), nullable=False),
    sa.Column('state_location', sa.String(length=255), nullable=False),
    sa.Column('lock_id', sa.String(length=255), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['environment_id'], ['app_schema.environments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    
    op.create_table('connections',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('source_id', sa.String(length=36), nullable=False),
    sa.Column('target_id', sa.String(length=36), nullable=False),
    sa.Column('connection_type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['app_schema.resources.id'], ),
    sa.ForeignKeyConstraint(['target_id'], ['app_schema.resources.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app_schema'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('connections', schema='app_schema')
    op.drop_table('state_management', schema='app_schema')
    op.drop_index('ix_resources_resource_type', table_name='resources', schema='app_schema')
    op.drop_index('ix_resources_name', table_name='resources', schema='app_schema')
    op.drop_index('ix_resources_environment_id', table_name='resources', schema='app_schema')
    op.drop_table('resources', schema='app_schema')
    op.drop_table('environment_versions', schema='app_schema')
    op.drop_table('deployments', schema='app_schema')
    op.drop_table('compliance_rules', schema='app_schema')
    op.drop_table('environments', schema='app_schema')
    op.drop_table('cloud_credentials', schema='app_schema')
    op.drop_table('teams', schema='app_schema')
    op.drop_table('organizations', schema='app_schema')
    # ### end Alembic commands ###
'''

# Write the fixed migration file
with open('fixed_migration.py', 'w') as f:
    f.write(MIGRATION)

print("Fixed migration file created at fixed_migration.py") 